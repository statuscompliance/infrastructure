services:
  ############### MICROSERVICES ###############
  status-backend:
    restart: always
    container_name: status-backend
    build:
      context: ./status-backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    networks:
      - web_network
      - mysql_network
    healthcheck:
      test: curl -f -s http://127.0.0.1:3001/api/user
      retries: 10
    depends_on:
      mysql:
        condition: service_healthy
      nodered:
        condition: service_healthy
  # ================================================
  status-frontend:
    restart: always
    container_name: status-frontend
    build:
      context: ./status-frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    networks:
      - web_network
  # ================================================
  nodered:
    restart: always
    container_name: node-red-status
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "1880:1880"
    volumes:
      - ./node-red-status:/data
      - ./settings.js:/data/settings.js
    command: node-red
    networks:
      - web_network
  # ================================================
  mysql:
    restart: always
    image: mysql:8.3.0
    container_name: mysql
    networks:
      - mysql_network
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: yes
    healthcheck:
      test: mysqladmin ping -h localhost
      retries: 10
    ports:
      - "3306:3306"
    volumes:
      - mysql:/var/lib/mysql
  # ================================================
  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    user: root
    ports:
      - "3100:3000"
    networks:
      - mysql_network
    environment:
      - GF_SECURITY_ADMIN_USER=${USER_STATUS}
      - GF_SECURITY_ADMIN_PASSWORD=${PASS_STATUS}
    volumes:
      - "$PWD/grafana/data:/var/lib/grafana"
      - "$PWD/config:/etc/grafana/provisioning/datasources"
    restart: unless-stopped
  # ================================================
networks:
  mysql_network:
    driver: bridge
  web_network:
    driver: bridge

volumes:
  bluejay-influx-reporter-volume: null
  bluejay-mongo-registry-volume: null
  bluejay-dashboard-volume: null
  bluejay-redis-ec-volume: null
  nodered:
    name: node-red-status
  mysql:
    name: mysql
